pipeline {
    agent any
    tools {
        jdk 'jdk11'
        maven 'maven3'
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage("Git Checkout") {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/jaiswaladi246/Petclinic.git'
            }
        }

    stages {
        stage("scm") {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/spring-petclinic/spring-framework-petclinic.git'
            }
        }
    }

    // stage("Sonarqube Analysis") {
    //     steps {
    //         script {
    //             def mavenHome = tool 'maven3'
    //             def scannerHome = tool 'sonar-scanner'

    //             withMaven(maven: mavenHome, mavenSettingsConfig: 'your-maven-settings-id') {
    //                 sh "${scannerHome}/bin/sonar-scanner"
    //             }
    //         }
    //     }
    // }


        stage("OWASP Dependency Check") {
            steps {
                dependencyCheck additionalArguments: '--format HTML', odcInstallation: 'OWASP'
                // dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
    }
}
